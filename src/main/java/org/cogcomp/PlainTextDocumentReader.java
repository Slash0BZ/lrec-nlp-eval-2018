package org.cogcomp;

import edu.illinois.cs.cogcomp.core.utilities.configuration.ResourceManager;
import edu.illinois.cs.cogcomp.nlp.corpusreaders.AbstractIncrementalCorpusReader;
import edu.illinois.cs.cogcomp.nlp.corpusreaders.CorpusReaderConfigurator;

import java.io.IOException;
import java.nio.file.Path;
import java.util.List;

/**
 * Created by mssammon on 1/21/18.
 */
public class PlainTextDocumentReader extends AbstractIncrementalCorpusReader {
    /**
     * ResourceManager must specify the fields {@link CorpusReaderConfigurator}.CORPUS_NAME and
     * .CORPUS_DIRECTORY, plus whatever is required by the derived class for initializeReader().
     *
     * @param rm ResourceManager
     * @throws Exception
     */
    public PlainTextDocumentReader(ResourceManager rm) throws Exception {
        super(rm);
    }

    /**
     * generate a list of files comprising the corpus. Each is expected to generate one or more
     * TextAnnotation objects, though the way the iterator is implemented allows for corpus files to
     * generate zero TextAnnotations if you are feeling picky. Note that the corpus directory is
     * specified as a constructor argument.
     *
     * @return a list of lists of Path objects corresponding to files containing corpus documents to
     * process. each list entry contains a set of files consisting of a source file that
     * contains the base text that is decorated by annotations (plus possibly annotations as
     * well) and zero or more files that contain annotations for that base text.
     */
    @Override
    public List<List<Path>> getFileListing() throws IOException {
        return null;
    }

    /**
     * given an entry from the corpus file list generated by {@link #getFileListing()} , parse its
     * contents and get zero or more TextAnnotation objects.
     *
     * @param corpusFileListEntry corpus file containing content to be processed
     * @return List of TextAnnotation objects extracted from the corpus file
     */
    @Override
    public List getAnnotationsFromFile(List corpusFileListEntry) throws Exception {
        return null;
    }
}
